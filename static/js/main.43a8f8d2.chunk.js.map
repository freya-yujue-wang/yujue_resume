{"version":3,"sources":["resumeContent.js","components/ResumeHeader.js","components/resume-contents/parts/Experience.js","components/resume-contents/parts/Project.js","components/resume-contents/parts/Education.js","components/resume-contents/parts/Skill.js","components/resume-contents/ResumeContent.js","App.js","serviceWorker.js","index.js"],"names":["resumeContent","name","title","location","selfIntro","email","phone","github","experiences","company","time","details","projects","educations","major","date","school","GPA","skills","ResumeHeader","useState","openSnackBar","setOpenSnackBar","snackbarMessage","setSnackbarMessage","className","Button","color","onClick","event","content","ReactGA","category","action","navigator","clipboard","writeText","then","startIcon","link","window","open","Snackbar","autoHideDuration","onClose","handleCloseSnackBar","Alert","severity","Experience","map","experience","detail","Project","project","Education","education","Skill","skill","Chip","clickable","label","ResumeContent","App","useEffect","initialize","pageview","pathname","search","Grid","container","justify","item","xs","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.43a8f8d2.chunk.js","sourcesContent":["export const resumeContent = {\n  name: \"Freya Wang\",\n  title: \"software Engineer\",\n  location: \"Bay Area\",\n  selfIntro: \"I am a lazy, nothing to tell.\",\n  email: \"Yujuewa@gmail.com\",\n  phone: \"361-212-8126\",\n  github: \"freya-yujue-wang\",\n  experiences: [\n    {\n      company: \"Google\",\n      title: \"software Enigneer\",\n      time: \"Jan 2018-present\",\n      details: [\n        \"resove ** with with\",\n        \"developed *** wth **\",\n        \"developed *** wth **\",\n      ],\n    },\n    {\n      company: \"Google\",\n      title: \"software Enigneer\",\n      time: \"Jan 2018-present\",\n      details: [\n        \"resove ** with with\",\n        \"developed *** wth **\",\n        \"developed *** wth **\",\n      ],\n    },\n  ],\n  projects: [\n    {\n      title: \"Resume Project\",\n      details: [\"Connected**\", \"Deployed**\", \"*****\"],\n    },\n  ],\n  educations: [\n    {\n      major: \"M.S. of Computer Science \",\n      date: \"2012-2013\",\n      school: \"University of Houston-Victoria\",\n      GPA: \"4.0/4.0\",\n    },\n    {\n      major: \"M.S. of Computer Science \",\n      date: \"2009-2012\",\n      school: \"Ocean University of China\",\n      GPA: \"3.9/4.0\",\n    },\n  ],\n  skills: [\"Java\", \"React\", \"Hadoop\"],\n};\n","import React, { useState } from \"react\";\nimport { resumeContent } from \"../resumeContent\";\nimport Button from \"@material-ui/core/Button\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"./ResumeHeader.css\";\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ReactGA from \"react-ga\";\n\n//React 16.8 React hook\nexport default function ResumeHeader() {\n  const [openSnackBar, setOpenSnackBar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  return (\n    <div className=\"background-color-blue full-size\">\n      <h2>{resumeContent.name}</h2>\n      <h4>{resumeContent.title}</h4>\n      <h5>{resumeContent.location}</h5>\n      <p>{resumeContent.selfIntro}</p>\n      <div>\n        <Button\n          color=\"primary\"\n          onClick={(event) => handleEmailClick(resumeContent.email)}\n          startIcon={<EmailIcon />}\n        >\n          {resumeContent.email}\n        </Button>\n      </div>\n\n      <p>\n        <PhoneIcon /> {resumeContent.phone}\n      </p>\n\n      <div>\n        <Button\n          color=\"primary\"\n          onClick={(event) =>\n            handleGitHubClick(`https://github.com/${resumeContent.github}`)\n          }\n          startIcon={<GitHubIcon />}\n        >\n          {resumeContent.github}\n        </Button>\n      </div>\n\n      <Snackbar\n        open={openSnackBar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackBar}\n      >\n        <Alert onClose={handleCloseSnackBar} severity=\"success\">\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n\n  function handleEmailClick(content) {\n    ReactGA.event({\n      category: \"user\",\n      action: \"Email button clicked\",\n    });\n    navigator.clipboard.writeText(content).then(() => {\n      setOpenSnackBar(true);\n      setSnackbarMessage(`Sucessfuuly copied \"${content}\" to clipboard!`);\n    });\n  }\n\n  function handleCloseSnackBar() {\n    setOpenSnackBar(false);\n  }\n\n  function handleGitHubClick(link) {\n    ReactGA.event({\n      category: \"user\",\n      action: \"Github button clicked\",\n    });\n    window.open(link);\n  }\n}\n","import React from \"react\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport { resumeContent } from \"../../../resumeContent\";\n\nexport default function Experience() {\n  return (\n    <div>\n      <div className=\"font-color-blue margin-bottom-title \">\n        <WorkIcon />\n        Experience\n      </div>\n      {renderExperience()}\n    </div>\n  );\n\n  function renderExperience() {\n    return resumeContent.experiences.map((experience) => {\n      return (\n        <div className=\"margin-left-content\">\n          <b>{experience.title}</b>\n          <div>{experience.title}</div>\n          <div>{experience.title}</div>\n          <ul>\n            {experience.details.map((detail) => {\n              return <li className=\"grey\">{detail} </li>;\n            })}\n          </ul>\n        </div>\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport { resumeContent } from \"../../../resumeContent\";\n\nexport default function Project() {\n  return (\n    <div>\n      <div className=\"font-color-blue margin-bottom-title \">\n        <StarIcon />\n        Project\n      </div>\n      {renderProject()}\n    </div>\n  );\n\n  function renderProject() {\n    return resumeContent.projects.map((project) => {\n      return (\n        <div className=\"margin-left-content\">\n          <b>{project.title}</b>\n          <ul>\n            {project.details.map((detail) => {\n              return <li className=\"grey\">{detail} </li>;\n            })}\n          </ul>\n        </div>\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport { resumeContent } from \"../../../resumeContent\";\n\nexport default function Education() {\n  return (\n    <div>\n      <div className=\"font-color-blue margin-bottom-title\">\n        <WorkIcon />\n        Education\n      </div>\n      {renderEducation()}\n    </div>\n  );\n\n  function renderEducation() {\n    return resumeContent.educations.map((education) => {\n      return (\n        <div className=\"margin-left-content\">\n          <b>{education.major}</b>\n          <div>{education.date}</div>\n          <div>{education.school}</div>\n          <div>{education.GPA}</div>\n        </div>\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport { resumeContent } from \"../../../resumeContent\";\nimport Chip from \"@material-ui/core/Chip\";\n\nexport default function Skill() {\n  return (\n    <div>\n      <div className=\"font-color-blue margin-bottom-title\">\n        <AttachFileIcon />\n        Skill\n      </div>\n      {renderSkills()}\n    </div>\n  );\n\n  function renderSkills() {\n    return resumeContent.skills.map((skill) => (\n      <Chip\n        clickable\n        label={skill}\n        className=\"background-color-blue margin-left-content\"\n      />\n    ));\n  }\n}\n","import React from \"react\";\nimport Experience from \"./parts/Experience\";\nimport Project from \"./parts/Project\";\nimport Education from \"./parts/Education\";\nimport Skill from \"./parts/Skill\";\nimport \"./ResumeContent.css\";\n\n//React 16.8 React hook\nexport default function ResumeContent() {\n  return (\n    <div>\n      <Experience />\n      <Project />\n      <Education />\n      <Skill />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport ResumeHeader from \"./components/ResumeHeader\";\nimport ResumeContent from \"./components/resume-contents/ResumeContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReactGA from \"react-ga\";\n\n//base componment\nfunction App() {\n  // componentDidMount\n  useEffect(() => {\n    ReactGA.initialize(\"UA-175997340-1\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid container item xs={4}>\n          <ResumeHeader />\n        </Grid>\n\n        <Grid container item xs={8}>\n          <ResumeContent />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}